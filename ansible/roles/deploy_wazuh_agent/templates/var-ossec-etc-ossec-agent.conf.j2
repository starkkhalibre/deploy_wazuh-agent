#jinja2: lstrip_blocks: True
<ossec_config>
  <client>
    {% for manager in wazuh_managers %}
    <server>
      <address>{{ manager.address }}</address>
      {% if manager.port is defined %}
      <port>{{ manager.port }}</port>
      {% endif %}
      {% if manager.protocol is defined %}
      <protocol>{{ manager.protocol }}</protocol>
      {% endif %}
      {% if manager.max_retries is defined and manager.retry_interval is defined %}
      <max_retries>{{ manager.max_retries }}</max_retries>
      <retry_interval>{{ manager.retry_interval }}</retry_interval>
      {% endif %}
    </server>
    {% endfor %}

    {% if wazuh_profile_ubuntu is not none %}
    {% if ansible_distribution == "Ubuntu" %}
    <config-profile>{{ wazuh_profile_ubuntu }}</config-profile>
    {% endif %}
    {% endif %}

    {% if wazuh_notify_time is not none and wazuh_time_reconnect is not none %}
    <notify_time>{{ wazuh_notify_time }}</notify_time>
    <time-reconnect>{{ wazuh_time_reconnect }}</time-reconnect>
    {% endif %}

    <auto_restart>{{ wazuh_auto_restart }}</auto_restart>
    <crypto_method>{{ wazuh_crypto_method }}</crypto_method>

    {% if wazuh_agent_config.enrollment.enabled == 'yes' %}
    <enrollment>
      <enabled>{{ wazuh_agent_config.enrollment.enabled }}</enabled>
      {% if wazuh_agent_config.enrollment.manager_address | length > 0 %}
      <manager_address>{{ wazuh_agent_config.enrollment.manager_address }}</manager_address>
      {% endif %}
      {% if wazuh_agent_config.enrollment.agent_name | length > 0 %}
      <agent_name>{{ wazuh_agent_config.enrollment.agent_name }}</agent_name>
      {% endif %}
      {% if wazuh_agent_config.enrollment.port is defined and wazuh_agent_config.enrollment.port > 0 %}
      <port>{{ wazuh_agent_config.enrollment.port }}</port>
      {% endif %}
      {% if wazuh_agent_config.enrollment.groups | length > 0 %}
      <groups>{{ wazuh_agent_config.enrollment.groups }}</groups>
      {% endif %}
      {% if wazuh_agent_config.enrollment.agent_address | length > 0 %}
      <agent_address>{{ wazuh_agent_config.enrollment.agent_address }}</agent_address>
      {% endif %}
      {% if wazuh_agent_config.enrollment.server_ca_path | length > 0 %}
      <server_ca_path>{{ wazuh_agent_config.enrollment.server_ca_path }}</server_ca_path>
      {% endif %}
      {% if wazuh_agent_config.enrollment.agent_certificate_path | length > 0 %}
      <agent_certificate_path>{{ wazuh_agent_config.enrollment.agent_certificate_path }}</agent_certificate_path>
      {% endif %}
      {% if wazuh_agent_config.enrollment.agent_key_path | length > 0 %}
      <agent_key_path>{{ wazuh_agent_config.enrollment.agent_key_path }}</agent_key_path>
      {% endif %}
      {% if wazuh_agent_config.enrollment.authorization_pass_path | length > 0 %}
      <authorization_pass_path>{{ wazuh_agent_config.enrollment.authorization_pass_path }}</authorization_pass_path>
      {% endif %}
      {% if wazuh_agent_config.enrollment.auto_method | length > 0 %}
      <auto_method>{{ wazuh_agent_config.enrollment.auto_method }}</auto_method>
      {% endif %}
      {% if wazuh_agent_config.enrollment.delay_after_enrollment is defined and wazuh_agent_config.enrollment.delay_after_enrollment > 0 %}
      <delay_after_enrollment>{{ wazuh_agent_config.enrollment.delay_after_enrollment }}</delay_after_enrollment>
      {% endif %}
      {% if wazuh_agent_config.enrollment.use_source_ip | length > 0 %}
      <use_source_ip>{{ wazuh_agent_config.enrollment.use_source_ip }}</use_source_ip>
      {% endif %}
    </enrollment>
    {% endif %}
  </client>

  <client_buffer>
    <!-- Agent buffer options -->
    <disabled>{{ wazuh_agent_config.client_buffer.disable }}</disabled>
    <queue_size>{{ wazuh_agent_config.client_buffer.queue_size }}</queue_size>
    <events_per_second>{{ wazuh_agent_config.client_buffer.events_per_sec }}</events_per_second>
  </client_buffer>

  {% if wazuh_agent_config.rootcheck is defined %}
  <rootcheck>
    <disabled>no</disabled>
    <check_files>yes</check_files>
    <check_trojans>yes</check_trojans>
    <check_dev>yes</check_dev>
    <check_sys>yes</check_sys>
    <check_pids>yes</check_pids>
    <check_ports>yes</check_ports>
    <check_if>yes</check_if>

    <frequency>{{ wazuh_agent_config.rootcheck.frequency }}</frequency>
    <rootkit_files>{{ wazuh_dir }}/etc/shared/rootkit_files.txt</rootkit_files>
    <rootkit_trojans>{{ wazuh_dir }}/etc/shared/rootkit_trojans.txt</rootkit_trojans>
    <skip_nfs>yes</skip_nfs>
  </rootcheck>
  {% endif %}

  <wodle name="open-scap">
    <disabled>{{ wazuh_agent_config.openscap.disable }}</disabled>
    <timeout>{{ wazuh_agent_config.openscap.timeout }}</timeout>
    <interval>{{ wazuh_agent_config.openscap.interval }}</interval>
    <scan-on-start>{{ wazuh_agent_config.openscap.scan_on_start }}</scan-on-start>
    {% if ansible_distribution == 'Ubuntu' %}
    <content type="xccdf" path="ssg-ubuntu-1604-ds.xml">
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
    {% endif %}
  </wodle>

  {% if ansible_system != "Darwin" %}
  <wodle name="cis-cat">
    <disabled>{{ wazuh_agent_config.cis_cat.disable }}</disabled>
    <timeout>{{ wazuh_agent_config.cis_cat.timeout }}</timeout>
    <interval>{{ wazuh_agent_config.cis_cat.interval }}</interval>
    <scan-on-start>{{ wazuh_agent_config.cis_cat.scan_on_start }}</scan-on-start>
    <java_path>{{ wazuh_agent_config.cis_cat.java_path }}</java_path>
    <ciscat_path>{{ wazuh_agent_config.cis_cat.ciscat_path }}</ciscat_path>
  </wodle>
  {% endif %}

  <wodle name="osquery">
    <disabled>{{ wazuh_agent_config.osquery.disable }}</disabled>
    <run_daemon>{{ wazuh_agent_config.osquery.run_daemon }}</run_daemon>
    <log_path>{{ wazuh_agent_config.osquery.log_path }}</log_path>
    <config_path>{{ wazuh_agent_config.osquery.config_path }}</config_path>
    <add_labels>{{ wazuh_agent_config.osquery.add_labels }}</add_labels>
  </wodle>

  <wodle name="syscollector">
    <disabled>{{ wazuh_agent_config.syscollector.disable }}</disabled>
    <interval>{{ wazuh_agent_config.syscollector.interval }}</interval>
    <scan_on_start>{{ wazuh_agent_config.syscollector.scan_on_start }}</scan_on_start>
    <hardware>{{ wazuh_agent_config.syscollector.hardware }}</hardware>
    <os>{{ wazuh_agent_config.syscollector.os }}</os>
    <network>{{ wazuh_agent_config.syscollector.network }}</network>
    <packages>{{ wazuh_agent_config.syscollector.packages }}</packages>
    <ports all="no">{{ wazuh_agent_config.syscollector.ports_no }}</ports>
    <processes>{{ wazuh_agent_config.syscollector.processes }}</processes>
  </wodle>

  <sca>
    <enabled>yes</enabled>
    <scan_on_start>yes</scan_on_start>
    <interval>12h</interval>
    <skip_nfs>yes</skip_nfs>
  </sca>

  <syscheck>
    <disabled>no</disabled>
    <frequency>{{ wazuh_agent_config.syscheck.frequency }}</frequency>
    <scan_on_start>{{ wazuh_agent_config.syscheck.scan_on_start }}</scan_on_start>

    {% if wazuh_agent_config.syscheck.directories is defined %}
    {% for directory in wazuh_agent_config.syscheck.directories %}
    <directories {{ directory.checks }}>{{ directory.dirs }}</directories>
    {% endfor %}
    {% endif %}

    {% if wazuh_agent_config.syscheck.ignore is defined %}
    {% for ignore in wazuh_agent_config.syscheck.ignore %}
    <ignore>{{ ignore }}</ignore>
    {% endfor %}
    {% endif %}

    <skip_nfs>{{ wazuh_agent_config.syscheck.skip_nfs }}</skip_nfs>
    <skip_dev>{{ wazuh_agent_config.syscheck.skip_dev }}</skip_dev>
    <skip_proc>{{ wazuh_agent_config.syscheck.skip_proc }}</skip_proc>
    <skip_sys>{{ wazuh_agent_config.syscheck.skip_sys }}</skip_sys>

    <process_priority>{{ wazuh_agent_config.syscheck.process_priority }}</process_priority>
    <max_eps>{{ wazuh_agent_config.syscheck.max_eps }}</max_eps>

    <synchronization>
      <enabled>{{ wazuh_agent_config.syscheck.sync_enabled }}</enabled>
      <interval>{{ wazuh_agent_config.syscheck.sync_interval }}</interval>
      <max_interval>{{ wazuh_agent_config.syscheck.sync_max_interval }}</max_interval>
      <max_eps>{{ wazuh_agent_config.syscheck.sync_max_eps }}</max_eps>
    </synchronization>
  </syscheck>

  {% if ansible_system == "Linux" %}
  {% for localfile in wazuh_agent_config.localfiles.linux %}
  <localfile>
    <log_format>{{ localfile.format }}</log_format>
    {% if localfile.format == 'command' or localfile.format == 'full_command' %}
    <command>{{ localfile.command }}</command>
    <frequency>{{ localfile.frequency }}</frequency>
    {% if localfile.alias is defined %}
    <alias>{{ localfile.alias }}</alias>
    {% endif %}
    {% else %}
    <location>{{ localfile.location }}</location>
    {% if localfile.format == 'json' %}
    {% endif %}
    {% endif %}
  </localfile>
  {% endfor %}
  {% endif %}
</ossec_config>